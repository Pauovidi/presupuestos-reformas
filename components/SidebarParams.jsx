import { useState } from "react";
const defaultParams={precios:{falsoTecho_m2:25,falsoTechoTecnico_m2:40,tecnico_hora:30,habitacion_fija:500,cocina_fija:3000,tabiqueria_obra_m2:50,tabiqueria_pladur_m2:35,derribo_base:500,fontaneria_base:0,electricidad_base:0},factorCalidad:{Basico:1,Estandar:1.15,Premium:1.25},referenciaCiudad:{madrid:55,barcelona:50,valencia:40,sevilla:38},ciudadPorDefecto:"valencia"};
export default function SidebarParams({params,setParams}){
  const [local,setLocal]=useState(params||defaultParams);
  const [newCity,setNewCity]=useState("");const [newVal,setNewVal]=useState("");
  const update=(path,value)=>{const next=JSON.parse(JSON.stringify(local));const segs=path.split(".");let ptr=next;for(let i=0;i<segs.length-1;i++)ptr=ptr[segs[i]];ptr[segs.at(-1)]=value;setLocal(next);setParams?.(next);};
  const downloadJSON=()=>{const blob=new Blob([JSON.stringify(local,null,2)],{type:"application/json"});const url=URL.createObjectURL(blob);const a=document.createElement("a");a.href=url;a.download="parametros_reformas.json";a.click();URL.revokeObjectURL(url);};
  const uploadJSON=(e)=>{const f=e.target.files?.[0];if(!f)return;const r=new FileReader();r.onload=()=>{try{const parsed=JSON.parse(r.result);setLocal(parsed);setParams?.(parsed);}catch{alert("JSON inválido");}};r.readAsText(f);};
  const addCity=()=>{if(!newCity)return;const val=Number(newVal)||0;if(val<=0)return;const key=newCity.toLowerCase();const next=JSON.parse(JSON.stringify(local));next.referenciaCiudad[key]=val;setLocal(next);setParams?.(next);setNewCity("");setNewVal("");};
  const removeCity=(key)=>{const next=JSON.parse(JSON.stringify(local));delete next.referenciaCiudad[key];if(next.ciudadPorDefecto===key)next.ciudadPorDefecto=Object.keys(next.referenciaCiudad)[0]||"";setLocal(next);setParams?.(next);};
  return (<aside className="w-full md:w-80 shrink-0 space-y-4"><div className="card"><div className="flex items-center justify-between mb-2"><h3 className="font-semibold">Parámetros</h3><span className="text-xs text-slate-500">Local</span></div><div className="space-y-3">
    <div><label className="label">Ciudad por defecto</label><select className="input" value={local.ciudadPorDefecto} onChange={e=>update("ciudadPorDefecto",e.target.value)}>{Object.keys(local.referenciaCiudad).map(c=>(<option key={c} value={c}>{c}</option>))}</select></div>
    <div className="grid grid-cols-2 gap-3">{Object.entries(local.precios).map(([k,v])=>(<div key={k}><label className="label">{k.replaceAll("_"," ")}</label><input type="number" step="0.01" className="input" value={v} onChange={e=>update(`precios.${k}`,parseFloat(e.target.value)||0)} /></div>))}</div>
    <div className="grid grid-cols-3 gap-3">{Object.entries(local.factorCalidad).map(([k,v])=>(<div key={k}><label className="label">Factor {k}</label><input type="number" step="0.01" className="input" value={v} onChange={e=>update(`factorCalidad.${k}`,parseFloat(e.target.value)||0)} /></div>))}</div>
    <div className="space-y-2"><label className="label">Referencias (€/m²)</label><div className="space-y-1">{Object.entries(local.referenciaCiudad).map(([city,val])=>(<div key={city} className="flex items-center gap-2"><span className="flex-1 text-sm">{city}</span><input className="input w-24" type="number" value={val} onChange={e=>update(`referenciaCiudad.${city}`,parseFloat(e.target.value)||0)} /><button className="btn btn-ghost" onClick={()=>removeCity(city)}>−</button></div>))}</div>
    <div className="flex items-center gap-2"><input className="input flex-1" placeholder="nueva ciudad" value={newCity} onChange={e=>setNewCity(e.target.value)} /><input className="input w-24" placeholder="€/m²" value={newVal} onChange={e=>setNewVal(e.target.value)} /><button className="btn btn-primary" onClick={addCity}>Añadir ciudad</button></div></div>
    <div className="space-y-2"><button className="btn btn-ghost w-full" onClick={downloadJSON}>Exportar</button><label className="btn btn-ghost w-full cursor-pointer">Importar<input type="file" accept="application/json" className="hidden" onChange={uploadJSON} /></label></div>
    <button className="btn w-full" onClick={()=>{setLocal(defaultParams);setParams?.(defaultParams);}}>Restablecer por defecto</button>
  </div></div></aside>);}
export { defaultParams };
